Задание 1. Добавление звука для красной кнопки



Что нужно сделать
Вспомните программу с красной кнопкой, которая изменяет свой внешний вид.
При помощи QMediaPlayer добавьте звук щелчка при нажатии на кнопку.



Задание 2. Создание приложения для редактирования HTML-файла



Что нужно сделать
Создайте приложение, в котором окно делится на две половины. В левой половине можно редактировать HTML-документ, а в правой — видеть результат WebView. Пример такого приложения:


Можете использовать Qt Creator и Qt Designer, чтобы быстро добавить два элемента: QPlainTextEdit для редактирования текста и QWebEngineView для отображения результата. Необходимо, чтобы каждый из виджетов занимал равное количество пространства по горизонтали и все по вертикали.

Выделите оба виджета. Зажмите Ctrl и щёлкните сначала по одному из виджетов, а затем по второму. Нажмите «Расположить по горизонтали» или Lay out horizontally.
Для каждого из виджетов найдите параметр Horizontal stretch и сделайте его равным единице.


Задание 3. Создание приложения, которое позволяет наложить Blur-эффект



Что нужно сделать
Необходимо создать приложение, которое позволяет открыть картинку и наложить Blur-эффект. Глубину наложения можно варьировать при помощи слайдера. Пример приложения:

Можно использовать Qt Creator и Qt Designer, чтобы быстро добавить три элемента. Первый виджет — QLabel для отображения картинки. Второй — QSlider для установления глубины blur. Для этого выберите min слайдера 0, а max — десять. Третий виджет — кнопка QPushButton для открытия диалога выбора картинки. Используйте файловый диалог из задания про медиаплеер. Виджеты можно расположить по вертикали одной кнопкой в Qt Designer, как это было в предыдущем задании.

При перемещении слайдера к изображению применяется эффект с нужной величиной blurRadius. Воспользуйтесь функцией из примера, в котором применялся QtConcurrent. Эта величина всегда равнялась восьми. Необходимо вынести её в аргументы функции примерно таким образом:

QImage blurImage(QImage source, int blurRadius);
Установить картинку из функции в label можно так:

ui->imageLabel->setPixmap(QPixmap::fromImage(blurImage(sourceImage, newValue).scaled(
                                    ui->imageLabel->width(),
                                    ui->imageLabel->height(), Qt::KeepAspectRatio)));
ImageLabel — label, в который необходимо загрузить картинку. Использование метода scaled позволяет изменять размеры изображения. В данном случае нужно сжать изображение под размер, который занимает label с сохранением соотношения сторон (Qt::KeepAspectRatio).